{"version":3,"sources":["mitragyna.jsx"],"names":["Collection","state","loading","target","prototype","build","bindAll","setTarget","props","nextProps","subject","isRelationship","isA","Associations","CollectionProxy","setLoadedTarget","setState","base","loaded","load","then","isUndefined","all","attributes","cloneTarget","push","newItem","oldItem","replace","item","delete","clone","blankComponent","children","className","component","inlineRows","rowClassName","size","map","t","localId","replaceOnTarget","toArray","PureComponent","propTypes","oneOfType","array","node","string","func","bool","object","isRequired","defaultProps","ErrorsFor","attribute","resource","errors","forField","message","code","Input","name","type","context","value","selectValueFor","inline","input","createSelectElement","createInputElement","createElement","key","onBlur","handleUpdate","onChange","handleChange","id","includeBlank","options","optionsLabelKey","selectOptions","isEmpty","o","unshift","selectProps","omit","keys","e","persist","afterUpdate","find","assignAttributes","contextTypes","Resource","root","reflection","reflectionInstance","klass","reflectOnAssociation","inverseReflection","inverseOf","newResource","updateRoot","association","childContext","isNestedResource","body","newRoot","fromSave","save","childContextTypes"],"mappings":"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","file":"mitragyna.min.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ActiveResource from 'active-resource';\nimport _ from 'underscore';\n\nexport class Collection extends React.PureComponent {\n  static propTypes = {\n    children: PropTypes.oneOfType([\n      PropTypes.array,\n      PropTypes.node,\n    ]),\n    className: PropTypes.string,\n    blankComponent: PropTypes.func,\n    component: PropTypes.func,\n    inlineRows: PropTypes.bool,\n    rowClassName: PropTypes.string,\n    subject: PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n    ]).isRequired,\n  };\n\n  static defaultProps = {\n    inlineRows: false\n  };\n\n  // link to global state by enabling afterLoad, afterAdd, afterRemove, afterUpdate callbacks that can call\n  // an action linked to dispatch\n\n  constructor() {\n    super();\n\n    this.state = {\n      loading: true,\n      target: ActiveResource.prototype.Collection.build()\n    };\n\n    _.bindAll(this,\n      'buildOnTarget',\n      'cloneTarget',\n      'replaceOnTarget',\n      'removeFromTarget',\n    );\n  }\n\n  componentDidMount() {\n    this.setTarget(this.props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setTarget(nextProps);\n  }\n\n  setTarget(props) {\n    const { subject } = props;\n\n    let isRelationship = subject.isA(ActiveResource.prototype.Associations.prototype.CollectionProxy);\n\n    let setLoadedTarget = (target) => {\n      this.setState({ loading: false, target })\n    };\n\n    if(isRelationship) {\n      if(subject.base.loaded()) {\n        setLoadedTarget(subject.base.target)\n      } else {\n        subject.load()\n        .then(setLoadedTarget)\n      }\n    } else if(!_.isUndefined(subject.all)) {\n      subject.all()\n      .then(setLoadedTarget)\n    }\n  }\n\n  buildOnTarget(attributes) {\n    const { subject } = this.props;\n    let target = this.cloneTarget();\n\n    target.push(subject.build(attributes));\n\n    this.setState({ target: target });\n  }\n\n  replaceOnTarget(newItem, oldItem) {\n    let target = this.cloneTarget();\n\n    target.replace(oldItem, newItem);\n\n    return this.setState({ target });\n  }\n\n  removeFromTarget(item) {\n    let target = this.cloneTarget();\n\n    target.delete(item);\n\n    return this.setState({ target });\n  }\n\n  cloneTarget() {\n    return this.state.target.clone();\n  }\n\n  render() {\n    const { blankComponent, children, className, component, inlineRows, rowClassName } = this.props;\n    const { loading, target } = this.state;\n\n    return (\n      <section className={ className }>\n        { loading ? (\n          <span>Loading</span>\n        ) : (\n          target.size() > 0 ? (\n            target.map((t) =>\n              <Resource subject={ t } key={ t.localId } component= { component }\n                        className={ rowClassName } inline={ inlineRows }\n                        afterUpdate={ this.replaceOnTarget }>\n                { children }\n              </Resource>\n            ).toArray()\n          ) : (blankComponent != null &&\n            blankComponent()\n          )\n        )}\n      </section>\n    );\n  }\n}\n\nexport class ErrorsFor extends React.PureComponent {\n  static propTypes = {\n    attribute: PropTypes.string,\n    resource: PropTypes.object.isRequired,\n  };\n\n  render() {\n    const { attribute, resource } = this.props;\n\n    if(_.size(resource.errors().forField(attribute)) < 1) {\n      return null;\n    }\n\n    return(\n      <p className='dark-red f6 mt2 mb0'>\n        {\n          _.map(resource.errors().forField(attribute),\n            (message, code) => <span key={ code } className='db'>{ message }</span>\n          )\n        }\n      </p>\n    );\n  }\n};\n\nexport class Input extends React.PureComponent {\n  static contextTypes = {\n    afterUpdate: PropTypes.func,\n    inline: PropTypes.bool,\n    resource: PropTypes.object,\n  };\n\n  static propTypes = {\n    includeBlank: PropTypes.bool,\n    options: PropTypes.array,\n    optionsLabelKey: PropTypes.string,\n  };\n\n  constructor() {\n    super();\n\n    _.bindAll(this,\n      'createInputElement',\n      'createSelectElement',\n      'handleChange',\n      'handleUpdate',\n    );\n  }\n\n  componentWillMount() {\n    const { name, type } = this.props;\n    const { resource } = this.context;\n\n    // Set initial value to that of the resources\n    this.setState({\n      value: type == 'select' ? this.selectValueFor(resource[name]()) : (resource[name] || '')\n    });\n  }\n\n  render() {\n    const { name, type } = this.props;\n    const { inline, resource } = this.context;\n\n    let input = (type === 'select') ? this.createSelectElement() : this.createInputElement();\n\n    return React.createElement(inline ? 'span' : 'div', {}, [\n      input, <ErrorsFor attribute={ name } resource={ resource } key='errors' />\n    ]);\n  }\n\n  createInputElement() {\n    const { name } = this.props;\n\n    return React.createElement('input', {\n      ...this.props,\n      key: name,\n      onBlur: this.handleUpdate,\n      onChange: this.handleChange,\n      value: this.state.value,\n    });\n  }\n\n  // TODO: Add support for non-resource options\n  selectValueFor(resource) {\n    return resource && resource.id || '';\n  }\n\n  createSelectElement() {\n    const { includeBlank, name, options, optionsLabelKey } = this.props;\n\n    let selectOptions = null;\n    if (options.isEmpty()) {\n      throw 'Input type=\"select\" must have options';\n    } else {\n      selectOptions = options.map((o) => <option key={o.localId} value={o.id}>{o[optionsLabelKey]}</option>);\n      if (includeBlank) {\n        selectOptions = selectOptions.unshift(<option key={-1} value=''></option>);\n      }\n    }\n\n    let selectProps = _.omit(this.props, _.keys(Input.propTypes));\n\n    return React.createElement('select', {\n      ...selectProps,\n      key: name,\n      onBlur: this.handleUpdate,\n      onChange: this.handleChange,\n      value: this.state.value,\n    }, selectOptions);\n  }\n\n  handleChange(e) {\n    e.persist();\n\n    this.setState({\n      value: e.target.value\n    });\n  }\n\n  handleUpdate(e) {\n    e.persist();\n\n    const { afterUpdate, resource } = this.context;\n    const { name, type, options } = this.props;\n\n    var value = e.target.value;\n\n    if(type === 'select') {\n      value = options.find((o) => o.id === value);\n    }\n\n    afterUpdate(resource.assignAttributes({ [name]: value }));\n  }\n}\n\nexport class Resource extends React.PureComponent {\n  static propTypes = {\n    afterUpdate: PropTypes.func,\n    children: PropTypes.oneOfType([\n      PropTypes.array,\n      PropTypes.node,\n    ]),\n    className: PropTypes.string,\n    component: PropTypes.func,\n    inline: PropTypes.bool,\n    reflection: PropTypes.string,\n    subject: PropTypes.object.isRequired,\n  };\n\n  static contextTypes = {\n    isNestedResource: PropTypes.bool,\n    root: PropTypes.object,\n    updateRoot: PropTypes.func,\n  };\n\n  static childContextTypes = {\n    afterUpdate: PropTypes.func,\n    inline: PropTypes.bool,\n    isNestedResource: PropTypes.bool,\n    resource: PropTypes.object,\n    root: PropTypes.object,\n    updateRoot: PropTypes.func,\n  };\n\n  static defaultProps = {\n    inline: false\n  };\n\n  constructor(props, context) {\n    super();\n\n    _.bindAll(this,\n      'afterUpdate',\n      'updateRoot'\n    );\n\n    const { root } = context;\n    const { reflection, subject } = props;\n\n    let state = { resource: subject };\n\n    if(reflection) {\n      var reflectionInstance = root.klass().reflectOnAssociation(reflection);\n      if(_.isUndefined(reflectionInstance)) throw 'Reflection ' + reflection + ' not found.';\n      var inverseReflection = reflectionInstance.inverseOf();\n      if(_.isUndefined(inverseReflection)) throw 'Reflection ' + reflection + ' must have inverse.';\n\n      state = {\n        ...state,\n        inverseReflection,\n        reflection: reflectionInstance,\n      };\n    }\n\n    this.state = state;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ resource: nextProps.subject });\n  }\n\n  afterUpdate(newResource) {\n    const { updateRoot } = this.context;\n    const { inverseReflection } = this.state;\n\n    if(inverseReflection) {\n      updateRoot(newResource.association(inverseReflection.name).target);\n    } else {\n      this.updateRoot(newResource);\n    }\n  }\n\n  getChildContext() {\n    const { root } = this.context;\n    const { inline } = this.props;\n    const { resource } = this.state;\n\n    let childContext = {\n      afterUpdate: this.afterUpdate,\n      inline,\n      isNestedResource: true,\n      root: root || resource,\n      resource,\n      updateRoot: this.updateRoot\n    };\n\n    return childContext;\n  }\n\n  render() {\n    const { isNestedResource } = this.context;\n    const { children, className, component } = this.props;\n    const { resource } = this.state;\n\n    let body = null;\n    if(component) {\n      body = React.createElement(component, { subject: resource });\n    } else {\n      body = children;\n    }\n\n    if(!isNestedResource) {\n      body = <form>{ body }</form>;\n    }\n\n    return (\n      <section className={ className }>\n        { body }\n      </section>\n    );\n  }\n\n  updateRoot(newRoot, fromSave = false) {\n    const { afterUpdate } = this.props;\n    const { resource } = this.state;\n\n    this.setState({ resource: newRoot });\n\n    if(!_.isUndefined(afterUpdate)) afterUpdate(newRoot, resource);\n\n    if(!fromSave) {\n      newRoot.save((root) => this.updateRoot(root, true));\n    }\n  }\n}\n"]}