{"version":3,"sources":["mitragyna.jsx"],"names":["Collection","state","loading","target","prototype","build","bindAll","setTarget","props","nextProps","subject","isRelationship","isA","Associations","CollectionProxy","setLoadedTarget","setState","base","loaded","load","then","isUndefined","all","attributes","cloneTarget","push","newItem","oldItem","replace","item","delete","clone","blankComponent","children","className","component","inlineRows","rowClassName","size","map","t","localId","replaceOnTarget","toArray","PureComponent","propTypes","oneOfType","array","node","string","func","bool","object","isRequired","defaultProps","ErrorsFor","root","context","field","errors","forField","message","code","contextTypes","Field","name","type","resource","value","selectValueFor","nextContext","createSelectElement","createInputElement","inputProps","omit","keys","finalComponent","createElement","key","onBlur","handleUpdate","onChange","handleChange","id","includeBlank","options","optionsLabelKey","selectOptions","isEmpty","o","unshift","selectProps","e","persist","afterUpdate","find","assignAttributes","Resource","reflection","reflectionInstance","klass","reflectOnAssociation","inverseReflection","inverseOf","error","newResource","updateRoot","oldTarget","association","newTarget","collection","index","indexOf","get","childContext","isNestedResource","body","newRoot","fromSave","save","childContextTypes"],"mappings":"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","file":"mitragyna.min.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ActiveResource from 'active-resource';\nimport _ from 'underscore';\n\nexport class Collection extends React.PureComponent {\n  static propTypes = {\n    children: PropTypes.oneOfType([\n      PropTypes.array,\n      PropTypes.node,\n    ]),\n    className: PropTypes.string,\n    blankComponent: PropTypes.func,\n    component: PropTypes.func,\n    inlineRows: PropTypes.bool,\n    rowClassName: PropTypes.string,\n    subject: PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n    ]).isRequired,\n  };\n\n  static defaultProps = {\n    inlineRows: false\n  };\n\n  // link to global state by enabling afterLoad, afterAdd, afterRemove, afterUpdate callbacks that can call\n  // an action linked to dispatch\n\n  constructor() {\n    super();\n\n    this.state = {\n      loading: true,\n      target: ActiveResource.prototype.Collection.build()\n    };\n\n    _.bindAll(this,\n      'buildOnTarget',\n      'cloneTarget',\n      'replaceOnTarget',\n      'removeFromTarget',\n    );\n  }\n\n  componentDidMount() {\n    this.setTarget(this.props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setTarget(nextProps);\n  }\n\n  setTarget(props) {\n    const { subject } = props;\n\n    let isRelationship = subject.isA(ActiveResource.prototype.Associations.prototype.CollectionProxy);\n\n    let setLoadedTarget = (target) => {\n      this.setState({ loading: false, target })\n    };\n\n    if(isRelationship) {\n      if(subject.base.loaded()) {\n        setLoadedTarget(subject.base.target)\n      } else {\n        subject.load()\n        .then(setLoadedTarget)\n      }\n    } else if(!_.isUndefined(subject.all)) {\n      subject.all()\n      .then(setLoadedTarget)\n    }\n  }\n\n  buildOnTarget(attributes) {\n    const { subject } = this.props;\n    let target = this.cloneTarget();\n\n    target.push(subject.build(attributes));\n\n    this.setState({ target: target });\n  }\n\n  replaceOnTarget(newItem, oldItem) {\n    let target = this.cloneTarget();\n\n    target.replace(oldItem, newItem);\n\n    return this.setState({ target });\n  }\n\n  removeFromTarget(item) {\n    let target = this.cloneTarget();\n\n    target.delete(item);\n\n    return this.setState({ target });\n  }\n\n  cloneTarget() {\n    return this.state.target.clone();\n  }\n\n  render() {\n    const { blankComponent, children, className, component, inlineRows, rowClassName } = this.props;\n    const { loading, target } = this.state;\n\n    return (\n      <section className={ className }>\n        { loading ? (\n          <span>Loading</span>\n        ) : (\n          target.size() > 0 ? (\n            target.map((t) =>\n              <Resource subject={ t } key={ t.localId } component= { component }\n                        className={ rowClassName } inline={ inlineRows }\n                        afterUpdate={ this.replaceOnTarget }>\n                { children }\n              </Resource>\n            ).toArray()\n          ) : (blankComponent != null &&\n            blankComponent()\n          )\n        )}\n      </section>\n    );\n  }\n}\n\nexport class ErrorsFor extends React.PureComponent {\n  static propTypes = {\n    field: PropTypes.string,\n  };\n\n  static contextTypes = {\n    root: PropTypes.object,\n  };\n\n  render() {\n    const { root } = this.context;\n    const { field } = this.props;\n\n    if(_.size(root.errors().forField(field)) < 1) {\n      return null;\n    }\n\n    return(\n      <summary>\n        {\n          _.map(root.errors().forField(field),\n            (message, code) => <p key={ code }>{ message }</p>\n          )\n        }\n      </summary>\n    );\n  }\n};\n\nexport class Field extends React.PureComponent {\n  static contextTypes = {\n    afterUpdate: PropTypes.func,\n    resource: PropTypes.object,\n  };\n\n  static propTypes = {\n    component: PropTypes.func,\n    includeBlank: PropTypes.bool,\n    name: PropTypes.string.isRequired,\n    options: PropTypes.array,\n    optionsLabelKey: PropTypes.string,\n    type: PropTypes.string.isRequired,\n  };\n\n  constructor() {\n    super();\n\n    _.bindAll(this,\n      'createInputElement',\n      'createSelectElement',\n      'handleChange',\n      'handleUpdate',\n    );\n  }\n\n  componentWillMount() {\n    const { name, type } = this.props;\n    const { resource } = this.context;\n\n    // Set initial value to that of the resources\n    this.setState({\n      value: type == 'select' ? this.selectValueFor(resource[name]()) : (resource[name] || '')\n    });\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    const { name, type } = nextProps;\n    const { resource } = nextContext;\n\n    this.setState({\n      value: type == 'select' ? this.selectValueFor(resource[name]()) : (resource[name] || '')\n    });\n  }\n\n  render() {\n    const { name, type } = this.props;\n    const { resource } = this.context;\n\n    return (type === 'select') ? this.createSelectElement() : this.createInputElement();\n  }\n\n  createInputElement() {\n    const { component, name } = this.props;\n\n    let inputProps = _.omit(this.props, _.keys(Field.propTypes));\n\n    let finalComponent = component || 'input';\n    return React.createElement(finalComponent, {\n      ...inputProps,\n      key: name,\n      onBlur: this.handleUpdate,\n      onChange: this.handleChange,\n      value: this.state.value,\n    });\n  }\n\n  // TODO: Add support for non-resource options\n  selectValueFor(resource) {\n    return resource && resource.id || '';\n  }\n\n  createSelectElement() {\n    const { component, includeBlank, name, options, optionsLabelKey } = this.props;\n\n    let selectOptions = null;\n    if (options.isEmpty()) {\n      throw 'Input type=\"select\" must have options';\n    } else {\n      selectOptions = options.map((o) => <option key={o.localId} value={o.id}>{o[optionsLabelKey]}</option>);\n      if (includeBlank) {\n        selectOptions = selectOptions.unshift(<option key={-1} value=''></option>);\n      }\n    }\n\n    let selectProps = _.omit(this.props, _.keys(Field.propTypes));\n\n    let finalComponent = component || 'select';\n    return React.createElement(finalComponent, {\n      ...selectProps,\n      key: name,\n      onBlur: this.handleUpdate,\n      onChange: this.handleChange,\n      value: this.state.value,\n    }, selectOptions);\n  }\n\n  handleChange(e) {\n    e.persist();\n\n    this.setState({\n      value: e.target.value\n    });\n  }\n\n  handleUpdate(e) {\n    e.persist();\n\n    const { afterUpdate, resource } = this.context;\n    const { name, type, options } = this.props;\n\n    var value = e.target.value;\n\n    if(type === 'select') {\n      value = options.find((o) => o.id === value);\n    }\n\n    afterUpdate(resource.assignAttributes({ [name]: value }));\n  }\n}\n\nexport class Resource extends React.PureComponent {\n  static propTypes = {\n    afterUpdate: PropTypes.func,\n    children: PropTypes.oneOfType([\n      PropTypes.array,\n      PropTypes.node,\n    ]),\n    className: PropTypes.string,\n    component: PropTypes.func,\n    reflection: PropTypes.string,\n    subject: PropTypes.object.isRequired,\n  };\n\n  static contextTypes = {\n    isNestedResource: PropTypes.bool,\n    root: PropTypes.object,\n    updateRoot: PropTypes.func,\n  };\n\n  static childContextTypes = {\n    afterUpdate: PropTypes.func,\n    isNestedResource: PropTypes.bool,\n    resource: PropTypes.object,\n    root: PropTypes.object,\n    updateRoot: PropTypes.func,\n  };\n\n  constructor(props, context) {\n    super();\n\n    _.bindAll(this,\n      'afterUpdate',\n      'updateRoot'\n    );\n\n    const { root } = context;\n    const { reflection, subject } = props;\n\n    let state = { resource: subject };\n\n    if(reflection) {\n      var reflectionInstance = root.klass().reflectOnAssociation(reflection);\n      if(_.isUndefined(reflectionInstance)) throw 'Reflection ' + reflection + ' not found.';\n      var inverseReflection = reflectionInstance.inverseOf();\n      if(_.isUndefined(inverseReflection)) throw 'Reflection ' + reflection + ' must have inverse.';\n\n      state = {\n        ...state,\n        inverseReflection,\n        reflection: reflectionInstance,\n      };\n    }\n\n    this.state = state;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ resource: nextProps.subject });\n  }\n\n  componentDidCatch(error) {\n    return <p>{ error }</p>;\n  }\n\n  afterUpdate(newResource) {\n    const { root, updateRoot } = this.context;\n    const { inverseReflection, resource } = this.state;\n\n    if(inverseReflection) {\n      var oldTarget = resource.association(inverseReflection.name).target;\n      var newTarget = newResource.association(inverseReflection.name).target;\n\n      if(inverseReflection.collection()) {\n        var index = oldTarget.indexOf(root);\n        updateRoot(newTarget.get(index));\n      } else {\n        updateRoot(target);\n      }\n    } else {\n      this.updateRoot(newResource);\n    }\n  }\n\n  getChildContext() {\n    const { root } = this.context;\n    const { resource } = this.state;\n\n    let childContext = {\n      afterUpdate: this.afterUpdate,\n      isNestedResource: true,\n      root: root || resource,\n      resource,\n      updateRoot: this.updateRoot\n    };\n\n    return childContext;\n  }\n\n  render() {\n    const { isNestedResource } = this.context;\n    const { children, className, component } = this.props;\n    const { resource } = this.state;\n\n    let body = null;\n    if(component) {\n      body = React.createElement(component, { subject: resource });\n    } else {\n      body = children;\n    }\n\n    if(!isNestedResource) {\n      body = <form>{ body }</form>;\n    }\n\n    return (\n      <section className={ className }>\n        { body }\n      </section>\n    );\n  }\n\n  updateRoot(newRoot, fromSave = false) {\n    const { afterUpdate } = this.props;\n    const { resource } = this.state;\n\n    this.setState({ resource: newRoot });\n\n    if(!_.isUndefined(afterUpdate)) afterUpdate(newRoot, resource);\n\n    if(!fromSave) {\n      newRoot.save((root) => this.updateRoot(root, true));\n    }\n  }\n}\n"]}