{"version":3,"sources":["mitragyna.jsx"],"names":["Collection","state","loading","target","prototype","build","bindAll","setTarget","props","nextProps","subject","isRelationship","isA","Associations","CollectionProxy","setLoadedTarget","setState","base","loaded","load","then","isUndefined","all","attributes","cloneTarget","push","newItem","oldItem","replace","item","delete","clone","blankComponent","children","className","component","size","map","t","localId","replaceOnTarget","toArray","PureComponent","propTypes","oneOfType","array","node","string","func","object","isRequired","defaultProps","inlineRows","ErrorsFor","root","context","field","errors","forField","message","code","contextTypes","Field","name","type","resource","value","valueFor","nextContext","val","isNull","id","renderRadioComponent","renderSelectComponent","renderTextareaComponent","renderInputComponent","componentFor","inputProps","omit","keys","finalComponent","createElement","key","onBlur","handleUpdate","onChange","handleChange","fieldValue","radioProps","checked","includeBlank","options","optionsLabelKey","selectOptions","empty","o","unshift","omittedKeys","selectProps","textareaProps","e","persist","afterUpdate","newValue","detect","assignAttributes","bool","instanceOf","number","Resource","reflection","reflectionInstance","klass","reflectOnAssociation","inverseReflection","inverseOf","error","newResource","updateRoot","oldTarget","association","newTarget","collection","first","childContext","isNestedResource","onSubmit","preventDefault","componentProps","body","handleSubmit","newRoot","fromSave","save","childContextTypes"],"mappings":"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","file":"mitragyna.min.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ActiveResource from 'active-resource';\nimport _ from 'underscore';\n\nexport class Collection extends React.PureComponent {\n  static propTypes = {\n    children: PropTypes.oneOfType([\n      PropTypes.array,\n      PropTypes.node,\n    ]),\n    className: PropTypes.string,\n    blankComponent: PropTypes.func,\n    component: PropTypes.func,\n    subject: PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n    ]).isRequired,\n  };\n\n  static defaultProps = {\n    inlineRows: false\n  };\n\n  // link to global state by enabling afterLoad, afterAdd, afterRemove, afterUpdate callbacks that can call\n  // an action linked to dispatch\n\n  constructor() {\n    super();\n\n    this.state = {\n      loading: true,\n      target: ActiveResource.prototype.Collection.build()\n    };\n\n    _.bindAll(this,\n      'buildOnTarget',\n      'cloneTarget',\n      'replaceOnTarget',\n      'removeFromTarget',\n    );\n  }\n\n  componentDidMount() {\n    this.setTarget(this.props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setTarget(nextProps);\n  }\n\n  setTarget(props) {\n    const { subject } = props;\n\n    let isRelationship = subject.isA(ActiveResource.prototype.Associations.prototype.CollectionProxy);\n\n    let setLoadedTarget = (target) => {\n      this.setState({ loading: false, target })\n    };\n\n    if(isRelationship) {\n      if(subject.base.loaded()) {\n        setLoadedTarget(subject.base.target)\n      } else {\n        subject.load()\n        .then(setLoadedTarget)\n      }\n    } else if(!_.isUndefined(subject.all)) {\n      subject.all()\n      .then(setLoadedTarget)\n    }\n  }\n\n  buildOnTarget(attributes) {\n    const { subject } = this.props;\n    let target = this.cloneTarget();\n\n    target.push(subject.build(attributes));\n\n    this.setState({ target: target });\n  }\n\n  replaceOnTarget(newItem, oldItem) {\n    let target = this.cloneTarget();\n\n    target.replace(oldItem, newItem);\n\n    return this.setState({ target });\n  }\n\n  removeFromTarget(item) {\n    let target = this.cloneTarget();\n\n    target.delete(item);\n\n    return this.setState({ target });\n  }\n\n  cloneTarget() {\n    return this.state.target.clone();\n  }\n\n  render() {\n    const { blankComponent, children, className, component } = this.props;\n    const { loading, target } = this.state;\n\n    return (\n      <section className={ className }>\n        { loading ? (\n          <span>Loading</span>\n        ) : (\n          target.size() > 0 ? (\n            target.map((t) =>\n              <Resource subject={ t } key={ t.localId } component= { component }\n                        afterUpdate={ this.replaceOnTarget }>\n                { children }\n              </Resource>\n            ).toArray()\n          ) : (blankComponent != null &&\n            blankComponent()\n          )\n        )}\n      </section>\n    );\n  }\n}\n\nexport class ErrorsFor extends React.PureComponent {\n  static propTypes = {\n    field: PropTypes.string,\n  };\n\n  static contextTypes = {\n    root: PropTypes.object,\n  };\n\n  render() {\n    const { root } = this.context;\n    const { field } = this.props;\n\n    if(_.size(root.errors().forField(field)) < 1) {\n      return null;\n    }\n\n    return(\n      <summary>\n        {\n          _.map(root.errors().forField(field),\n            (message, code) => <p key={ code }>{ message }</p>\n          )\n        }\n      </summary>\n    );\n  }\n};\n\nexport class Field extends React.PureComponent {\n  static contextTypes = {\n    afterUpdate: PropTypes.func,\n    resource: PropTypes.object,\n  };\n\n  static propTypes = {\n    component: PropTypes.func,\n    includeBlank: PropTypes.bool,\n    name: PropTypes.string.isRequired,\n    options: PropTypes.instanceOf(ActiveResource.Collection),\n    optionsLabelKey: PropTypes.string,\n    type: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n      PropTypes.number,\n    ])\n  };\n\n  constructor() {\n    super();\n\n    _.bindAll(this,\n      'handleChange',\n      'handleUpdate',\n      'renderInputComponent',\n      'renderRadioComponent',\n      'renderSelectComponent',\n      'renderTextareaComponent',\n    );\n  }\n\n  componentWillMount() {\n    const { name, type } = this.props;\n    const { resource } = this.context;\n\n    // Set initial value to that of the resources\n    this.setState({\n      value: this.valueFor(type, resource, name)\n    });\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    const { name, type } = nextProps;\n    const { resource } = nextContext;\n\n    this.setState({\n      value: this.valueFor(type, resource, name)\n    });\n  }\n\n  // TODO: Add support for non-resource options on select and radio\n  valueFor(type, resource, name) {\n    switch(type) {\n      case 'radio':\n      case 'select':\n        var val = resource[name]();\n        return _.isNull(val) ? '' : val.id;\n      default:\n        return resource[name] || '';\n    }\n  }\n\n  componentFor(type) {\n    switch(type) {\n      case 'radio':\n        return this.renderRadioComponent();\n      case 'select':\n        return this.renderSelectComponent();\n      case 'textarea':\n        return this.renderTextareaComponent();\n      default:\n        return this.renderInputComponent();\n    }\n  }\n\n  render() {\n    const { type } = this.props;\n\n    return this.componentFor(type);\n  }\n\n  renderInputComponent() {\n    const { component, name } = this.props;\n\n    let inputProps = _.omit(this.props, _.keys(_.omit(Field.propTypes, 'type')));\n\n    let finalComponent = component || 'input';\n    return React.createElement(finalComponent, {\n      ...inputProps,\n      key: name,\n      onBlur: this.handleUpdate,\n      onChange: this.handleChange,\n      value: this.state.value,\n    });\n  }\n\n  renderRadioComponent() {\n    const { component, name, value } = this.props;\n    const { value: fieldValue } = this.state;\n\n    if (_.isUndefined(value)) {\n      throw 'Input type=\"radio\" must have prop \"value\"';\n    }\n\n    let radioProps = _.omit(this.props, _.keys(_.omit(Field.propTypes, 'type')));\n\n    let finalComponent = component || 'input';\n    return React.createElement(finalComponent, {\n      ...radioProps,\n      checked: value.id == fieldValue,\n      key: name,\n      onBlur: this.handleUpdate,\n      onChange: this.handleChange,\n      value: value.id,\n    });\n  }\n\n  renderSelectComponent() {\n    const { component, includeBlank, name, options, optionsLabelKey } = this.props;\n\n    let selectOptions = null;\n    if (options.empty()) {\n      throw 'Input type=\"select\" must have options';\n    } else {\n      selectOptions = options.map((o) => <option key={o.localId} value={o.id}>{o[optionsLabelKey]}</option>);\n      if (includeBlank) {\n        selectOptions = selectOptions.unshift(<option key={-1} value=''></option>);\n      }\n    }\n\n    let omittedKeys = component ? _.omit(Field.propTypes, 'type') : Field.propTypes;\n    let selectProps = _.omit(this.props, _.keys(omittedKeys));\n\n    let finalComponent = component || 'select';\n    return React.createElement(finalComponent, {\n      ...selectProps,\n      key: name,\n      onBlur: this.handleUpdate,\n      onChange: this.handleChange,\n      value: this.state.value,\n    }, selectOptions.toArray());\n  }\n\n  renderTextareaComponent() {\n    const { component, name } = this.props;\n\n    let textareaProps = _.omit(this.props, _.keys(Field.propTypes));\n\n    let finalComponent = component || 'textarea';\n    return React.createElement(finalComponent, {\n      ...textareaProps,\n      key: name,\n      onBlur: this.handleUpdate,\n      onChange: this.handleChange,\n      value: this.state.value,\n    });\n  }\n\n  handleChange(e) {\n    e.persist();\n\n    this.setState({\n      value: e.target.value\n    });\n  }\n\n  handleUpdate(e) {\n    e.persist();\n\n    const { afterUpdate, resource } = this.context;\n    const { name, type, options, value } = this.props;\n\n    var newValue = e.target.value;\n\n    switch(type) {\n      case 'radio':\n        newValue = value;\n        break;\n      case 'select':\n        newValue = options.detect((o) => o.id === newValue);\n        break;\n    }\n\n    afterUpdate(resource.assignAttributes({ [name]: newValue }));\n  }\n}\n\nexport class Resource extends React.PureComponent {\n  static propTypes = {\n    afterUpdate: PropTypes.func,\n    children: PropTypes.oneOfType([\n      PropTypes.array,\n      PropTypes.node,\n    ]),\n    className: PropTypes.string,\n    component: PropTypes.func,\n    componentProps: PropTypes.object,\n    onSubmit: PropTypes.func,\n    reflection: PropTypes.string,\n    subject: PropTypes.object.isRequired,\n  };\n\n  static contextTypes = {\n    isNestedResource: PropTypes.bool,\n    root: PropTypes.object,\n    updateRoot: PropTypes.func,\n  };\n\n  static childContextTypes = {\n    afterUpdate: PropTypes.func,\n    isNestedResource: PropTypes.bool,\n    resource: PropTypes.object,\n    root: PropTypes.object,\n    updateRoot: PropTypes.func,\n  };\n\n  static defaultProps = {\n    componentProps: {}\n  };\n\n  constructor(props, context) {\n    super();\n\n    _.bindAll(this,\n      'afterUpdate',\n      'handleSubmit',\n      'updateRoot'\n    );\n\n    const { root } = context;\n    const { reflection, subject } = props;\n\n    let state = { resource: subject };\n\n    if(reflection) {\n      var reflectionInstance = root.klass().reflectOnAssociation(reflection);\n      if(_.isUndefined(reflectionInstance)) throw 'Reflection ' + reflection + ' not found.';\n      var inverseReflection = reflectionInstance.inverseOf();\n      if(_.isUndefined(inverseReflection)) throw 'Reflection ' + reflection + ' must have inverse.';\n\n      state = {\n        ...state,\n        inverseReflection,\n        reflection: reflectionInstance,\n      };\n    }\n\n    this.state = state;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ resource: nextProps.subject });\n  }\n\n  componentDidCatch(error) {\n    return <p>{ error }</p>;\n  }\n\n  afterUpdate(newResource) {\n    const { root, updateRoot } = this.context;\n    const { inverseReflection, resource } = this.state;\n\n    if(inverseReflection) {\n      var oldTarget = resource.association(inverseReflection.name).target;\n      var newTarget = newResource.association(inverseReflection.name).target;\n\n      if(inverseReflection.collection()) {\n        // FIXME: Allow autosave inverseOf collection to appropriately handle multiple resources in the collection,\n        //   not just the first. If changing multiple fields of resource quickly, root may not be found in oldTarget\n        //   because it has already been replaced by a previous change\n        // var index = oldTarget.indexOf(root);\n        // var newRoot = newTarget.get(index);\n        updateRoot(newTarget.first());\n      } else {\n        updateRoot(target);\n      }\n    } else {\n      this.updateRoot(newResource);\n    }\n  }\n\n  getChildContext() {\n    const { root } = this.context;\n    const { resource } = this.state;\n\n    let childContext = {\n      afterUpdate: this.afterUpdate,\n      isNestedResource: true,\n      root: root || resource,\n      resource,\n      updateRoot: this.updateRoot\n    };\n\n    return childContext;\n  }\n\n  handleSubmit(e) {\n    const { onSubmit } = this.props;\n    const { resource } = this.state;\n\n    if(!_.isUndefined(onSubmit)) {\n      e.preventDefault();\n      onSubmit(resource);\n    }\n  }\n\n  render() {\n    const { isNestedResource } = this.context;\n    const { children, className, component, componentProps } = this.props;\n    const { resource } = this.state;\n\n    let body = null;\n    if(component) {\n      body = React.createElement(component, {\n        ...componentProps,\n        afterUpdate: this.afterUpdate,\n        subject: resource\n      });\n    } else {\n      body = children;\n    }\n\n    if(!isNestedResource) {\n      body = <form onSubmit={ this.handleSubmit }>{ body }</form>;\n    }\n\n    return (\n      <section className={ className }>\n        { body }\n      </section>\n    );\n  }\n\n  updateRoot(newRoot, fromSave = false) {\n    const { afterUpdate } = this.props;\n    const { resource } = this.state;\n\n    this.setState({ resource: newRoot });\n\n    if(!_.isUndefined(afterUpdate)) afterUpdate(newRoot, resource);\n\n    if(!fromSave) {\n      newRoot.save((root) => this.updateRoot(root, true));\n    }\n  }\n}\n"]}